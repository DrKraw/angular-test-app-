/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("angular/packages/zone.js/lib/browser/api-util", ["require", "exports", "angular/packages/zone.js/lib/common/events", "angular/packages/zone.js/lib/common/utils", "angular/packages/zone.js/lib/browser/browser-util", "angular/packages/zone.js/lib/browser/define-property", "angular/packages/zone.js/lib/browser/property-descriptor"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var events_1 = require("angular/packages/zone.js/lib/common/events");
    var utils_1 = require("angular/packages/zone.js/lib/common/utils");
    var browser_util_1 = require("angular/packages/zone.js/lib/browser/browser-util");
    var define_property_1 = require("angular/packages/zone.js/lib/browser/define-property");
    var property_descriptor_1 = require("angular/packages/zone.js/lib/browser/property-descriptor");
    Zone.__load_patch('util', function (global, Zone, api) {
        api.patchOnProperties = utils_1.patchOnProperties;
        api.patchMethod = utils_1.patchMethod;
        api.bindArguments = utils_1.bindArguments;
        api.patchMacroTask = utils_1.patchMacroTask;
        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to
        // define which events will not be patched by `Zone.js`.
        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep
        // the name consistent with angular repo.
        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for
        // backwards compatibility.
        var SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');
        var SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');
        if (global[SYMBOL_UNPATCHED_EVENTS]) {
            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];
        }
        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {
            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =
                global[SYMBOL_BLACK_LISTED_EVENTS];
        }
        api.patchEventPrototype = events_1.patchEventPrototype;
        api.patchEventTarget = events_1.patchEventTarget;
        api.isIEOrEdge = utils_1.isIEOrEdge;
        api.ObjectDefineProperty = utils_1.ObjectDefineProperty;
        api.ObjectGetOwnPropertyDescriptor = utils_1.ObjectGetOwnPropertyDescriptor;
        api.ObjectCreate = utils_1.ObjectCreate;
        api.ArraySlice = utils_1.ArraySlice;
        api.patchClass = utils_1.patchClass;
        api.wrapWithCurrentZone = utils_1.wrapWithCurrentZone;
        api.filterProperties = property_descriptor_1.filterProperties;
        api.attachOriginToPatched = utils_1.attachOriginToPatched;
        api._redefineProperty = define_property_1._redefineProperty;
        api.patchCallbacks = browser_util_1.patchCallbacks;
        api.getGlobalObjects = function () {
            return ({ globalSources: events_1.globalSources, zoneSymbolEventNames: events_1.zoneSymbolEventNames, eventNames: property_descriptor_1.eventNames, isBrowser: utils_1.isBrowser, isMix: utils_1.isMix, isNode: utils_1.isNode, TRUE_STR: utils_1.TRUE_STR,
                FALSE_STR: utils_1.FALSE_STR, ZONE_SYMBOL_PREFIX: utils_1.ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR: utils_1.ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR: utils_1.REMOVE_EVENT_LISTENER_STR });
        };
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLXV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy96b25lLmpzL2xpYi9icm93c2VyL2FwaS11dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRzs7Ozs7Ozs7Ozs7O0lBRUgscUVBQTRHO0lBQzVHLG1FQUF3VztJQUV4VyxrRkFBOEM7SUFDOUMsd0ZBQW9EO0lBQ3BELGdHQUFtRTtJQUVuRSxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxVQUFDLE1BQVcsRUFBRSxJQUFjLEVBQUUsR0FBaUI7UUFDdkUsR0FBRyxDQUFDLGlCQUFpQixHQUFHLHlCQUFpQixDQUFDO1FBQzFDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsbUJBQVcsQ0FBQztRQUM5QixHQUFHLENBQUMsYUFBYSxHQUFHLHFCQUFhLENBQUM7UUFDbEMsR0FBRyxDQUFDLGNBQWMsR0FBRyxzQkFBYyxDQUFDO1FBQ3BDLGtHQUFrRztRQUNsRyx3REFBd0Q7UUFDeEQsa0dBQWtHO1FBQ2xHLHlDQUF5QztRQUN6Qyw0RkFBNEY7UUFDNUYsMkJBQTJCO1FBQzNCLElBQU0sMEJBQTBCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBQzFFLElBQU0sdUJBQXVCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3BFLElBQUksTUFBTSxDQUFDLHVCQUF1QixDQUFDLEVBQUU7WUFDbkMsTUFBTSxDQUFDLDBCQUEwQixDQUFDLEdBQUcsTUFBTSxDQUFDLHVCQUF1QixDQUFDLENBQUM7U0FDdEU7UUFDRCxJQUFJLE1BQU0sQ0FBQywwQkFBMEIsQ0FBQyxFQUFFO1lBQ3JDLElBQVksQ0FBQywwQkFBMEIsQ0FBQyxHQUFJLElBQVksQ0FBQyx1QkFBdUIsQ0FBQztnQkFDOUUsTUFBTSxDQUFDLDBCQUEwQixDQUFDLENBQUM7U0FDeEM7UUFDRCxHQUFHLENBQUMsbUJBQW1CLEdBQUcsNEJBQW1CLENBQUM7UUFDOUMsR0FBRyxDQUFDLGdCQUFnQixHQUFHLHlCQUFnQixDQUFDO1FBQ3hDLEdBQUcsQ0FBQyxVQUFVLEdBQUcsa0JBQVUsQ0FBQztRQUM1QixHQUFHLENBQUMsb0JBQW9CLEdBQUcsNEJBQW9CLENBQUM7UUFDaEQsR0FBRyxDQUFDLDhCQUE4QixHQUFHLHNDQUE4QixDQUFDO1FBQ3BFLEdBQUcsQ0FBQyxZQUFZLEdBQUcsb0JBQVksQ0FBQztRQUNoQyxHQUFHLENBQUMsVUFBVSxHQUFHLGtCQUFVLENBQUM7UUFDNUIsR0FBRyxDQUFDLFVBQVUsR0FBRyxrQkFBVSxDQUFDO1FBQzVCLEdBQUcsQ0FBQyxtQkFBbUIsR0FBRywyQkFBbUIsQ0FBQztRQUM5QyxHQUFHLENBQUMsZ0JBQWdCLEdBQUcsc0NBQWdCLENBQUM7UUFDeEMsR0FBRyxDQUFDLHFCQUFxQixHQUFHLDZCQUFxQixDQUFDO1FBQ2xELEdBQUcsQ0FBQyxpQkFBaUIsR0FBRyxtQ0FBaUIsQ0FBQztRQUMxQyxHQUFHLENBQUMsY0FBYyxHQUFHLDZCQUFjLENBQUM7UUFDcEMsR0FBRyxDQUFDLGdCQUFnQixHQUFHO1lBQ25CLE9BQUEsQ0FBQyxFQUFDLGFBQWEsd0JBQUEsRUFBRSxvQkFBb0IsK0JBQUEsRUFBRSxVQUFVLGtDQUFBLEVBQUUsU0FBUyxtQkFBQSxFQUFFLEtBQUssZUFBQSxFQUFFLE1BQU0sZ0JBQUEsRUFBRSxRQUFRLGtCQUFBO2dCQUNuRixTQUFTLG1CQUFBLEVBQUUsa0JBQWtCLDRCQUFBLEVBQUUsc0JBQXNCLGdDQUFBLEVBQUUseUJBQXlCLG1DQUFBLEVBQUMsQ0FBQztRQURwRixDQUNvRixDQUFDO0lBQzNGLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge2dsb2JhbFNvdXJjZXMsIHBhdGNoRXZlbnRQcm90b3R5cGUsIHBhdGNoRXZlbnRUYXJnZXQsIHpvbmVTeW1ib2xFdmVudE5hbWVzfSBmcm9tICcuLi9jb21tb24vZXZlbnRzJztcbmltcG9ydCB7QUREX0VWRU5UX0xJU1RFTkVSX1NUUiwgQXJyYXlTbGljZSwgRkFMU0VfU1RSLCBPYmplY3RDcmVhdGUsIE9iamVjdERlZmluZVByb3BlcnR5LCBPYmplY3RHZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsIFJFTU9WRV9FVkVOVF9MSVNURU5FUl9TVFIsIFRSVUVfU1RSLCBaT05FX1NZTUJPTF9QUkVGSVgsIGF0dGFjaE9yaWdpblRvUGF0Y2hlZCwgYmluZEFyZ3VtZW50cywgaXNCcm93c2VyLCBpc0lFT3JFZGdlLCBpc01peCwgaXNOb2RlLCBwYXRjaENsYXNzLCBwYXRjaE1hY3JvVGFzaywgcGF0Y2hNZXRob2QsIHBhdGNoT25Qcm9wZXJ0aWVzLCB3cmFwV2l0aEN1cnJlbnRab25lfSBmcm9tICcuLi9jb21tb24vdXRpbHMnO1xuXG5pbXBvcnQge3BhdGNoQ2FsbGJhY2tzfSBmcm9tICcuL2Jyb3dzZXItdXRpbCc7XG5pbXBvcnQge19yZWRlZmluZVByb3BlcnR5fSBmcm9tICcuL2RlZmluZS1wcm9wZXJ0eSc7XG5pbXBvcnQge2V2ZW50TmFtZXMsIGZpbHRlclByb3BlcnRpZXN9IGZyb20gJy4vcHJvcGVydHktZGVzY3JpcHRvcic7XG5cblpvbmUuX19sb2FkX3BhdGNoKCd1dGlsJywgKGdsb2JhbDogYW55LCBab25lOiBab25lVHlwZSwgYXBpOiBfWm9uZVByaXZhdGUpID0+IHtcbiAgYXBpLnBhdGNoT25Qcm9wZXJ0aWVzID0gcGF0Y2hPblByb3BlcnRpZXM7XG4gIGFwaS5wYXRjaE1ldGhvZCA9IHBhdGNoTWV0aG9kO1xuICBhcGkuYmluZEFyZ3VtZW50cyA9IGJpbmRBcmd1bWVudHM7XG4gIGFwaS5wYXRjaE1hY3JvVGFzayA9IHBhdGNoTWFjcm9UYXNrO1xuICAvLyBJbiBlYXJsaWVyIHZlcnNpb24gb2Ygem9uZS5qcyAoPDAuOS4wKSwgd2UgdXNlIGVudiBuYW1lIGBfX3pvbmVfc3ltYm9sX19CTEFDS19MSVNURURfRVZFTlRTYCB0b1xuICAvLyBkZWZpbmUgd2hpY2ggZXZlbnRzIHdpbGwgbm90IGJlIHBhdGNoZWQgYnkgYFpvbmUuanNgLlxuICAvLyBJbiBuZXdlciB2ZXJzaW9uICg+PTAuOS4wKSwgd2UgY2hhbmdlIHRoZSBlbnYgbmFtZSB0byBgX196b25lX3N5bWJvbF9fVU5QQVRDSEVEX0VWRU5UU2AgdG8ga2VlcFxuICAvLyB0aGUgbmFtZSBjb25zaXN0ZW50IHdpdGggYW5ndWxhciByZXBvLlxuICAvLyBUaGUgIGBfX3pvbmVfc3ltYm9sX19CTEFDS19MSVNURURfRVZFTlRTYCBpcyBkZXByZWNhdGVkLCBidXQgaXQgaXMgc3RpbGwgYmUgc3VwcG9ydGVkIGZvclxuICAvLyBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eS5cbiAgY29uc3QgU1lNQk9MX0JMQUNLX0xJU1RFRF9FVkVOVFMgPSBab25lLl9fc3ltYm9sX18oJ0JMQUNLX0xJU1RFRF9FVkVOVFMnKTtcbiAgY29uc3QgU1lNQk9MX1VOUEFUQ0hFRF9FVkVOVFMgPSBab25lLl9fc3ltYm9sX18oJ1VOUEFUQ0hFRF9FVkVOVFMnKTtcbiAgaWYgKGdsb2JhbFtTWU1CT0xfVU5QQVRDSEVEX0VWRU5UU10pIHtcbiAgICBnbG9iYWxbU1lNQk9MX0JMQUNLX0xJU1RFRF9FVkVOVFNdID0gZ2xvYmFsW1NZTUJPTF9VTlBBVENIRURfRVZFTlRTXTtcbiAgfVxuICBpZiAoZ2xvYmFsW1NZTUJPTF9CTEFDS19MSVNURURfRVZFTlRTXSkge1xuICAgIChab25lIGFzIGFueSlbU1lNQk9MX0JMQUNLX0xJU1RFRF9FVkVOVFNdID0gKFpvbmUgYXMgYW55KVtTWU1CT0xfVU5QQVRDSEVEX0VWRU5UU10gPVxuICAgICAgICBnbG9iYWxbU1lNQk9MX0JMQUNLX0xJU1RFRF9FVkVOVFNdO1xuICB9XG4gIGFwaS5wYXRjaEV2ZW50UHJvdG90eXBlID0gcGF0Y2hFdmVudFByb3RvdHlwZTtcbiAgYXBpLnBhdGNoRXZlbnRUYXJnZXQgPSBwYXRjaEV2ZW50VGFyZ2V0O1xuICBhcGkuaXNJRU9yRWRnZSA9IGlzSUVPckVkZ2U7XG4gIGFwaS5PYmplY3REZWZpbmVQcm9wZXJ0eSA9IE9iamVjdERlZmluZVByb3BlcnR5O1xuICBhcGkuT2JqZWN0R2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0R2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuICBhcGkuT2JqZWN0Q3JlYXRlID0gT2JqZWN0Q3JlYXRlO1xuICBhcGkuQXJyYXlTbGljZSA9IEFycmF5U2xpY2U7XG4gIGFwaS5wYXRjaENsYXNzID0gcGF0Y2hDbGFzcztcbiAgYXBpLndyYXBXaXRoQ3VycmVudFpvbmUgPSB3cmFwV2l0aEN1cnJlbnRab25lO1xuICBhcGkuZmlsdGVyUHJvcGVydGllcyA9IGZpbHRlclByb3BlcnRpZXM7XG4gIGFwaS5hdHRhY2hPcmlnaW5Ub1BhdGNoZWQgPSBhdHRhY2hPcmlnaW5Ub1BhdGNoZWQ7XG4gIGFwaS5fcmVkZWZpbmVQcm9wZXJ0eSA9IF9yZWRlZmluZVByb3BlcnR5O1xuICBhcGkucGF0Y2hDYWxsYmFja3MgPSBwYXRjaENhbGxiYWNrcztcbiAgYXBpLmdldEdsb2JhbE9iamVjdHMgPSAoKSA9PlxuICAgICAgKHtnbG9iYWxTb3VyY2VzLCB6b25lU3ltYm9sRXZlbnROYW1lcywgZXZlbnROYW1lcywgaXNCcm93c2VyLCBpc01peCwgaXNOb2RlLCBUUlVFX1NUUixcbiAgICAgICAgRkFMU0VfU1RSLCBaT05FX1NZTUJPTF9QUkVGSVgsIEFERF9FVkVOVF9MSVNURU5FUl9TVFIsIFJFTU9WRV9FVkVOVF9MSVNURU5FUl9TVFJ9KTtcbn0pO1xuIl19